<?php

namespace Tests\Unit\Repositories;

use App\Models\UserCard;
use App\Repository\Eloquent\UserCardRepository;
use Database\Seeders\UserCardSeeder;
use Database\Seeders\UserSeeder;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Tests\TestCase;

class UserCardRepositoryTest extends TestCase
{
    use RefreshDatabase;

    /**
     * @var UserCardRepository
     */
    private $usercardRepository;

    /**
     * Set up the test environment.
     */
    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $this->seed(UserSeeder::class);
        $this->seed(UserCardSeeder::class);

        $this->usercardRepository = new UserCardRepository(new UserCard());
    }

    /**
     * Getting all fields of UserCard
     */
    public function testAll(): void
    {
        $this->assertCount(1, $this->usercardRepository->all());
    }

    /**
     * Checking of existing card
     */
    public function testCardsExist(): void
    {
        $this->assertTrue($this->usercardRepository->cardsExist(1));
    }

    /**
     * Getting all user cards
     */
    public function testCardIdByUser(): void
    {
        $this->assertCount(1, $this->usercardRepository->cardIdByUser(1));
    }

    /**
     * Deleting card from user
     */
    public function testDelete(): void
    {
        $this->assertTrue($this->usercardRepository->delete(1, 1));
    }

    /**
     * Creating card for user
     */
    public function testCreateNew(): void
    {
        $this->usercardRepository->createNew(1, 5);
        $this->assertDatabaseHas('user_cards', [
            'card_id' => 5,
            'user_id' => 1
        ]);
    }

}
