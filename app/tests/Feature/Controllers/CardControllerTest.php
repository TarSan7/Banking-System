<?php

namespace Tests\Feature;

use App\Models\Card;
use App\Models\User;
use App\Models\UserCard;
use App\Repository\Eloquent\CardRepository;
use App\Repository\Eloquent\UserCardRepository;
use App\Repository\Eloquent\UserRepository;
use Database\Seeders\UserSeeder;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Support\Arr;
use Tests\TestCase;

class CardControllerTest extends TestCase
{
    use RefreshDatabase;

    /**
     * @var UserRepository
     * @var CardRepository
     * @var UserCardRepository
     */
    private $userRepository, $cardRepository, $userCardRepository, $card, $user;

    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->userRepository = new UserRepository(new User());
        $this->cardRepository= new CardRepository(new Card());
        $this->userCardRepository = new UserCardRepository(new UserCard());
        $this->user = User::factory()->create();
    }

    public function test_userCards()
    {
        $this->actingAs($this->user)->json('GET', 'api/en/private')->assertStatus(200);
    }

    public function test_addCard()
    {
        $card = $this->cardRepository->find(1);
        $userCard = [
            'number' => Arr::get($card, 'number', null),
            'cvv' => Arr::get($card, 'cvv', null),
            'expires-end' => Arr::get($card, 'expires_end')
        ];
        $this->json('POST', 'api/en/addCard', $userCard)
            ->assertStatus(401)
            ->assertJson([
                'error' => "Unauthorized"
            ]);

        $this->actingAs($this->user)->json('POST', 'api/en/addCard', $userCard)
            ->assertStatus(200)
            ->assertJson([
                'success' => "Card was added"
            ]);
        $this->actingAs($this->user)->json('POST', 'api/en/addCard', $userCard)
            ->assertStatus(200)
            ->assertJson([
                'error' => "This card has already used!"
            ]);
    }

    public function test_info()
    {
        $this->actingAs($this->user)->json('GET', 'api/en/card/2')
            ->assertStatus(200)
            ->assertJson([
                'error' => 'No such cards'
            ]);
        $card = $this->cardRepository->find(3);

        $userCard = [
            'number' => Arr::get($card, 'number', null),
            'cvv' => Arr::get($card, 'cvv', null),
            'expires-end' => Arr::get($card, 'expires_end')
        ];
        $this->actingAs($this->user)->json('POST', 'api/en/addCard', $userCard)
            ->assertStatus(200);

        $this->actingAs($this->user)->json('GET', 'api/en/card/3')
            ->assertStatus(200);
    }
}
